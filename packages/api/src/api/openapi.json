{
  "openapi": "3.0.1",
  "info": {
    "title": "너구디 API",
    "description": "구내식당 플랫폼 API",
    "contact": {
      "name": "너구디 팀",
      "url": "https://nugudi.com",
      "email": "nugudi@gmail.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    { "url": "https://dev.nugudi.com", "description": "개발 서버 (HTTPS)" }
  ],
  "tags": [
    { "name": "사용자 프로필", "description": "유저 프로필 관련 API" },
    { "name": "구내식당", "description": "구내식당 관련 API" },
    {
      "name": "사용자 인증",
      "description": "회원가입, 로그인, 로그아웃 등 인증 관련 API"
    },
    { "name": "관리자: 식당", "description": "관리자 식당 관련 API" }
  ],
  "paths": {
    "/api/v1/auth/signup/social": {
      "post": {
        "tags": ["사용자 인증"],
        "summary": "소셜 계정 회원가입",
        "description": "소셜 로그인으로 인증에 성공한 신규 회원의 회원가입을 진행합니다.\n\n사용 방법:\n1. 카카오 로그인(/api/v1/auth/login/kakao) 호출\n2. 신규 회원인 경우 202 상태와 함께 registrationToken 수신\n3. X-Registration-Token 헤더에, 받은 토큰을 포함하여 본 API 호출\n4. 필수 정보(닉네임 등)를 요청 바디에 포함\n5. 회원가입 성공 시 accessToken과 refreshToken을 응답 바디로 반환\n\n주의사항:\n- registrationToken은 30분간 유효\n- 토큰 만료 시 카카오 로그인부터 다시 진행",
        "operationId": "signUpSocial",
        "parameters": [
          {
            "name": "X-Registration-Token",
            "in": "header",
            "description": "카카오 로그인 후 받은 임시 회원 등록 토큰 (202 상태코드와 함께 받은 토큰)",
            "required": true,
            "example": "eyJhbGciOiJIUzI1NiJ9..."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SignUpSocialRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseSignUpResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/signup/local": {
      "post": {
        "tags": ["사용자 인증"],
        "summary": "일반 회원가입",
        "description": "이메일과 비밀번호를 사용한 일반 회원가입을 진행합니다.\n\n회원가입 성공 시:\n- 자동으로 로그인 처리\n- accessToken과 refreshToken을 응답 바디에 반환\n\n반환되는 토큰:\n- accessToken: API 호출 시 Authorization 헤더에 Bearer 형식으로 사용\n- refreshToken: 토큰 갱신 시 사용\n- 사용자 정보 (userId, email, nickname 등)\n\n디바이스 관리:\n- 다중 기기 로그인 지원을 위해 X-Device-ID 헤더를 선택적으로 전송 가능\n- 프론트엔드에서 UUID 생성 후 로컬 스토리지에 저장하여 사용 권장\n\n사전 요구사항:\n- 이메일 인증 완료 (/api/v1/auth/email/verify-code)",
        "operationId": "signUpLocal",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SignUpLocalRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseSignUpResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/refresh": {
      "post": {
        "tags": ["사용자 인증"],
        "summary": "JWT 토큰 갱신",
        "description": "리프레시 토큰으로 새로운 토큰을 발급받습니다.\n\n필수 헤더:\n- Authorization: Bearer {refreshToken} 형식으로 리프레시 토큰 전달\n- X-Device-ID: 토큰을 갱신할 디바이스의 고유 ID\n\n디바이스 ID 관리:\n- 로그인 시 사용한 동일한 디바이스 ID를 전달해야 함\n- 다른 디바이스 ID로 갱신 시도 시 실패\n\n반환 내용:\n- 새로운 accessToken과 refreshToken",
        "operationId": "refreshToken",
        "parameters": [
          {
            "name": "X-Device-ID",
            "in": "header",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseRefreshTokenResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/api/v1/auth/logout": {
      "post": {
        "tags": ["사용자 인증"],
        "summary": "로그아웃",
        "description": "현재 기기에서 로그아웃합니다.\n\n필수 헤더:\n- Authorization: Bearer {accessToken} - 현재 사용 중인 액세스 토큰\n- X-Refresh-Token: 현재 디바이스의 리프레시 토큰\n- X-Device-ID: 로그인 시 사용한 디바이스 고유 ID\n\n디바이스 ID 관리:\n- 프론트엔드에서 UUID.randomUUID() 등으로 생성\n- 웹: localStorage, 모바일 앱: SecureStorage 등에 저장\n- 로그인 시 생성/저장한 동일한 ID를 로그아웃 시에도 사용\n\n동작 방식:\n- 해당 디바이스의 세션만 종료 (다른 기기는 유지)\n- 액세스 토큰은 블랙리스트에 추가\n- 리프레시 토큰은 무효화",
        "operationId": "logout",
        "parameters": [
          {
            "name": "X-Refresh-Token",
            "in": "header",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "X-Device-ID",
            "in": "header",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseLogoutResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/api/v1/auth/login/naver": {
      "post": {
        "tags": ["사용자 인증"],
        "summary": "네이버 소셜 로그인",
        "description": "네이버로부터 전달받은 인가 코드와 redirect URI를 백엔드에 전달하여 로그인을 처리합니다.\n\n사용 방법:\n1. 인가 URL 조회 API로 redirect_uri를 포함한 네이버 인증 URL 획득\n2. 사용자를 네이버 로그인 페이지로 리다이렉트\n3. 네이버 인증 완료 후 프론트엔드 redirect_uri로 인가 코드(code) 수신\n4. 이 API에 code와 동일한 redirect_uri를 함께 전달\n\n반환 상태:\n- 기존 회원 (200 OK): accessToken과 refreshToken을 응답 바디에 반환\n- 신규 회원 (202 ACCEPTED): registrationToken을 응답 바디에 반환\n\n신규 회원의 경우:\n1. 반환받은 registrationToken을 저장\n2. /api/v1/auth/signup/social 엔드포인트 호출 시 X-Registration-Token 헤더에 해당 토큰을 포함\n3. 추가 정보(닉네임 등) 입력 후 회원가입 완료\n\n주의사항:\n- redirect_uri는 인가 URL 조회 시 사용한 값과 정확히 일치해야 합니다\n- 불일치 시 네이버 API 호출이 실패합니다",
        "operationId": "naverLogin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/NaverLoginRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseSocialLoginResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/login/local": {
      "post": {
        "tags": ["사용자 인증"],
        "summary": "일반 로그인",
        "description": "이메일과 비밀번호로 로그인합니다.\n\n반환 내용:\n- accessToken: API 호출 시 Authorization 헤더에 Bearer 형식으로 사용\n- refreshToken: 토큰 갱신 시 사용, 안전하게 저장 필요\n- 사용자 정보 (userId, email, nickname 등)\n\n디바이스 관리:\n- 다중 기기 로그인 지원을 위해 X-Device-ID 헤더를 선택적으로 전송 가능\n- 프론트엔드에서 UUID 생성 후 로컬 스토리지에 저장하여 사용 권장",
        "operationId": "localLogin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LocalLoginRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseLocalLoginResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/login/kakao": {
      "post": {
        "tags": ["사용자 인증"],
        "summary": "카카오 소셜 로그인",
        "description": "카카오로부터 전달받은 인가 코드와 redirect URI를 백엔드에 전달하여 로그인을 처리합니다.\n\n사용 방법:\n1. 인가 URL 조회 API로 redirect_uri를 포함한 카카오 인증 URL 획득\n2. 사용자를 카카오 로그인 페이지로 리다이렉트\n3. 카카오 인증 완료 후 프론트엔드 redirect_uri로 인가 코드(code) 수신\n4. 이 API에 code와 동일한 redirect_uri를 함께 전달\n\n반환 상태:\n- 기존 회원 (200 OK): accessToken과 refreshToken을 응답 바디에 반환\n- 신규 회원 (202 ACCEPTED): registrationToken을 응답 바디에 반환\n\n신규 회원의 경우:\n1. 반환받은 registrationToken을 저장\n2. /api/v1/auth/signup/social 엔드포인트 호출 시 X-Registration-Token 헤더에 해당 토큰을 포함\n3. 추가 정보(닉네임 등) 입력 후 회원가입 완료\n\n주의사항:\n- redirect_uri는 인가 URL 조회 시 사용한 값과 정확히 일치해야 합니다\n- 불일치 시 카카오 API 호출이 실패합니다",
        "operationId": "kakaoLogin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/KakaoLoginRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseSocialLoginResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/login/google": {
      "post": {
        "tags": ["사용자 인증"],
        "summary": "구글 소셜 로그인",
        "description": "구글로부터 전달받은 인가 코드와 redirect URI를 백엔드에 전달하여 로그인을 처리합니다.\n\n사용 방법:\n1. 인가 URL 조회 API로 redirect_uri를 포함한 구글 인증 URL 획득\n2. 사용자를 구글 로그인 페이지로 리다이렉트\n3. 구글 인증 완료 후 프론트엔드 redirect_uri로 인가 코드(code) 수신\n4. 이 API에 code와 동일한 redirect_uri를 함께 전달\n\n반환 상태:\n- 기존 회원 (200 OK): accessToken과 refreshToken을 응답 바디에 반환\n- 신규 회원 (202 ACCEPTED): registrationToken을 응답 바디에 반환\n\n신규 회원의 경우:\n1. 반환받은 registrationToken을 저장\n2. /api/v1/auth/signup/social 엔드포인트 호출 시 X-Registration-Token 헤더에 해당 토큰을 포함\n3. 추가 정보(닉네임 등) 입력 후 회원가입 완료\n\n주의사항:\n- redirect_uri는 인가 URL 조회 시 사용한 값과 정확히 일치해야 합니다\n- 불일치 시 구글 API 호출이 실패합니다",
        "operationId": "googleLogin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/GoogleLoginRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseSocialLoginResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/email/verify-code": {
      "post": {
        "tags": ["사용자 인증"],
        "summary": "이메일 인증 코드 확인",
        "description": "발송된 6자리 인증 코드를 확인합니다.\n\n인증 성공 시:\n- 해당 이메일이 인증 완료 상태로 변경\n- isVerified: true 반환\n\n인증 후 가능한 작업:\n- SIGNUP 목적: /api/v1/auth/signup/local로 회원가입 진행\n- RESET_PASSWORD 목적: 비밀번호 재설정 API 호출\n\n주의사항:\n- 코드는 5분 내에 입력해야 함\n- 3회 이상 잘못된 코드 입력 시 새로운 코드 발송 필요\n- 인증 완료 후 30분 내에 회원가입/비밀번호 재설정을 완료해야 함",
        "operationId": "verifyEmailCode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EmailVerifyRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseEmailVerifyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/email/send-code": {
      "post": {
        "tags": ["사용자 인증"],
        "summary": "이메일 인증 코드 발송",
        "description": "6자리 인증 코드를 이메일로 발송합니다.\n\n사용 목적(purpose):\n- SIGNUP: 회원가입 시 이메일 소유 확인\n- RESET_PASSWORD: 비밀번호 재설정 시 본인 확인\n\n재전송이 필요한 경우:\n- 이메일을 받지 못한 경우 (스팸함 확인 필요)\n- 5분이 지나 코드가 만료된 경우\n- 3회 이상 잘못된 코드를 입력한 경우\n- 기존 코드를 분실한 경우\n\n재전송 시 동작:\n- 기존 코드는 즉시 무효화됨\n- 새로운 6자리 코드가 생성되어 발송됨\n- 새 코드로만 인증 가능 (이전 코드 사용 불가)\n\n제한 사항:\n- 동일 이메일로 1시간 내 최대 5회 발송 가능\n- 재전송은 마지막 코드 발송으로부터 1분 후 재전송 가능 (쿨다운 시간)\n- 인증 코드는 5분간 유효\n\n발송 후 프로세스:\n1. 이메일로 전송된 6자리 코드 확인\n2. /api/v1/auth/email/verify-code로 코드 검증\n3. 회원가입 또는 비밀번호 재설정 진행",
        "operationId": "sendEmailVerificationCode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailVerificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseEmailVerificationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/cafeterias": {
      "post": {
        "tags": ["관리자: 식당"],
        "summary": "구내식당 등록",
        "description": "새로운 구내식당을 등록합니다.\n\n필수 정보:\n- 이름 (2~100자)\n- 주소 (최대 255자)\n- 상세 주소 (최대 100자)\n- 영업 요일 (businessHours.operatingDays)\n- 포장 가능 여부 (takeoutAvailable)\n\n선택 정보:\n- 위도/경도\n- 전화번호 (형식: 02-1234-5678)\n- 설명 (최대 1000자)\n- 한 줄 소개 (최대 200자)\n- 식권 가격 (0~50,000원)\n- 대표 이미지 파일 ID\n- 영업시간 정보 (businessHours)\n  - 점심 시간 (lunchStartTime, lunchEndTime)\n  - 저녁 시간 (dinnerStartTime, dinnerEndTime)\n  - 특별 휴무일 (specialHolidays)\n  - 비고 (note)\n\n등록 완료 시:\n- 구내식당 ID 반환\n- 등록된 모든 정보 반환\n- 생성 일시 반환",
        "operationId": "registerCafeteria",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterCafeteriaRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseRegisterCafeteriaResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/cafeterias/menus": {
      "post": {
        "tags": ["관리자: 식당"],
        "summary": "식단표 등록",
        "description": "특정 구내식당의 특정 날짜의 식단표를 등록합니다.\n\n필수 정보:\n- 구내식당 ID\n- 식단 날짜\n- 식사 시간대 (BREAKFAST, LUNCH, DINNER)\n- 메뉴 항목 목록 (1~30개)\n\n선택 정보:\n- 가격 (0~50,000원)\n- 메뉴 이미지 파일 ID\n- 특이사항 (최대 200자)\n\n중복 검증:\n- 동일한 구내식당의 동일한 날짜, 동일한 식사 시간대에는 하나의 식단표만 등록 가능\n- 예: 2025-10-09 점심 식단표가 이미 있으면 같은 날짜 점심 식단표 추가 등록 불가\n\n등록 완료 시:\n- 식단표 ID 반환\n- 자동 계산된 총 칼로리 반환\n- 등록된 모든 정보 반환",
        "operationId": "registerCafeteriaMenu",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterCafeteriaMenuRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseRegisterCafeteriaMenuResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/nickname/availability": {
      "get": {
        "tags": ["사용자 프로필"],
        "summary": "닉네임 사용 가능 여부 확인",
        "description": "회원가입 시 닉네임 중복 여부를 확인합니다.\n\n검증 규칙:\n- 길이: 2~12자\n- 허용 문자: 한글, 영문(대소문자), 숫자만 가능\n- 특수문자, 공백, 이모지 사용 불가\n- 중복 체크 (이미 사용 중인 닉네임 차단)\n\n반환 값:\n- isAvailable: true (사용 가능) / false (사용 불가)\n- nickname: 검증한 닉네임\n- message: 사용 불가 시 구체적인 사유",
        "operationId": "checkNicknameAvailability",
        "parameters": [
          {
            "name": "nickname",
            "in": "query",
            "description": "확인할 닉네임 (2~12자, 한글/영문/숫자만)",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseNicknameCheckResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/me": {
      "get": {
        "tags": ["사용자 프로필"],
        "summary": "내 프로필 조회",
        "description": "로그인한 유저 본인의 프로필을 조회합니다",
        "operationId": "getMyProfile",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseGetMyProfileResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/api/v1/cafeterias": {
      "get": {
        "tags": ["구내식당"],
        "summary": "특정 날짜 구내식당 식단표 조회 (무한 스크롤)",
        "description": "너구디에 등록된 구내식당 목록과 특정 날짜의 식단표를 조회합니다.\n\n**주요 기능:**\n- 구내식당 기본 정보\n- 특정 날짜의 식단표 (menuItems, 칼로리, 가격 등)\n- 식단표가 없는 구내식당은 menu 필드가 null\n\n**페이징:**\n- 커서 기반 무한 스크롤 지원\n- cursor: 다음 페이지를 조회하려면 이전 응답의 pageInfo.nextCursor 값 전달\n- size: 한 번에 조회할 개수 (기본 10개)\n\n**날짜:**\n- date를 지정하지 않으면 오늘 날짜 기준으로 조회\n",
        "operationId": "getCafeteriasWithMenu",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "description": "커서 (이전 페이지의 마지막 구내식당 ID, 첫 페이지는 null)",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "size",
            "in": "query",
            "description": "조회할 개수 (기본 10개)",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 10 }
          },
          {
            "name": "date",
            "in": "query",
            "description": "조회할 식단표 날짜 (null이면 오늘)",
            "required": false,
            "schema": { "type": "string", "format": "date" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseGetCafeteriaWithMenuResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cafeterias/{id}": {
      "get": {
        "tags": ["구내식당"],
        "summary": "특정 구내식당 조회",
        "description": "ID로 특정 구내식당의 상세 정보를 조회합니다.\n\n**주요 기능:**\n- 구내식당 기본 정보\n- 활성화된 구내식당만 조회 가능\n\n**에러 케이스:**\n- 존재하지 않는 ID: 404 NOT_FOUND\n- 비활성화된 구내식당: 404 NOT_FOUND\n",
        "operationId": "getCafeteria",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "구내식당 ID",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseGetCafeteriaResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cafeterias/{id}/menus": {
      "get": {
        "tags": ["구내식당"],
        "summary": "특정 구내식당의 특정 날짜 식단표 조회",
        "description": "특정 구내식당의 특정 날짜 식단표를 조회합니다.\n\n**주요 기능:**\n- 해당 날짜의 모든 식사 시간대 식단표 (아침, 점심, 저녁)\n- 식단표가 없으면 빈 배열 반환\n\n**날짜:**\n- date를 지정하지 않으면 오늘 날짜 기준으로 조회\n\n**에러 케이스:**\n- 존재하지 않는 구내식당 ID: 404 NOT_FOUND\n- 비활성화된 구내식당: 404 NOT_FOUND\n",
        "operationId": "getCafeteriaMenuByDate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "구내식당 ID",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "date",
            "in": "query",
            "description": "조회할 식단표 날짜 (null이면 오늘)",
            "required": false,
            "schema": { "type": "string", "format": "date" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseGetCafeteriaMenuResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cafeterias/{id}/menus/availability": {
      "get": {
        "tags": ["구내식당"],
        "summary": "특정 구내식당의 특정 월 일자별 식단표 유무 조회",
        "description": "특정 구내식당의 특정 월에 식단표가 있는 일자 목록을 조회합니다.\n\n**주요 기능:**\n- 지정한 연도/월에 식단표가 등록된 일자 목록 반환\n- 달력 UI에서 식단표 유무 표시에 활용\n\n**조회 가능 범위:**\n- 시작: 2025년 10월\n- 종료: 현재 월\n- 범위를 벗어나면 400 에러\n\n**응답 예시:**\n```json\n{\n  \"year\": 2025,\n  \"month\": 10,\n  \"daysWithMenu\": [1, 3, 5, 12, 15, 20, 25]\n}\n```\n\n**에러 케이스:**\n- 존재하지 않는 구내식당 ID: 404 NOT_FOUND\n- 조회 범위 벗어남: 400 BAD_REQUEST\n",
        "operationId": "getCafeteriaMenuAvailability",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "구내식당 ID",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "year",
            "in": "query",
            "description": "조회할 년도 (2025 이상)",
            "required": true,
            "schema": { "minimum": 2025, "type": "integer", "format": "int32" }
          },
          {
            "name": "month",
            "in": "query",
            "description": "조회할 월 (1-12)",
            "required": true,
            "schema": {
              "maximum": 12,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseGetCafeteriaMenuAvailabilityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/login/naver/authorize-url": {
      "get": {
        "tags": ["사용자 인증"],
        "summary": "네이버 OAuth 인증 URL 조회",
        "description": "네이버 OAuth 인증을 위한 인증 URL을 조회합니다.\n\nOAuth 설정을 서버에서 중앙 관리하여 프론트엔드-백엔드 간 설정 동기화를 보장합니다.\n\n사용 방법:\n1. 프론트엔드의 redirect_uri를 파라미터로 전달하여 이 API 호출\n2. 선택적으로 CSRF 방지를 위한 state 파라미터 전달\n3. 받은 URL로 사용자를 리다이렉트\n4. 사용자가 네이버 로그인 및 동의 완료\n5. 프론트엔드 redirect_uri로 인가 코드(code)와 state가 전달됨\n6. 인가 코드와 state를 /api/v1/auth/login/naver 엔드포인트로 전달하여 로그인 완료\n\n참고:\n- redirect_uri는 네이버 개발자 센터에 등록된 URI여야 합니다\n- 로컬: http://localhost:3000/api/auth/callback/naver\n\n- 배포: https://nugudi.com/api/auth/callback/naver",
        "operationId": "getNaverAuthorizeUrl",
        "parameters": [
          {
            "name": "redirectUri",
            "in": "query",
            "description": "네이버 인증 완료 후 리다이렉트될 URI",
            "required": true,
            "schema": { "type": "string" },
            "example": "https://nugudi.com/api/auth/callback/naver"
          },
          {
            "name": "state",
            "in": "query",
            "description": "CSRF 방지를 위한 상태 토큰 (선택)",
            "required": false,
            "schema": { "type": "string" },
            "example": "STATE_STRING"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseGetNaverAuthorizeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/login/kakao/authorize-url": {
      "get": {
        "tags": ["사용자 인증"],
        "summary": "카카오 OAuth 인증 URL 조회",
        "description": "카카오 OAuth 인증을 위한 인증 URL을 조회합니다.\n\nOAuth 설정을 서버에서 중앙 관리하여 프론트엔드-백엔드 간 설정 동기화를 보장합니다.\n\n사용 방법:\n1. 프론트엔드의 redirect_uri를 파라미터로 전달하여 이 API 호출\n2. 받은 URL로 사용자를 리다이렉트\n3. 사용자가 카카오 로그인 및 동의 완료\n4. 프론트엔드 redirect_uri로 인가 코드(code)가 전달됨\n5. 인가 코드를 /api/v1/auth/login/kakao 엔드포인트로 전달하여 로그인 완료\n\n참고:\n- redirect_uri는 카카오 개발자 콘솔에 등록된 URI여야 합니다\n- 로컬: http://localhost:3000/api/auth/callback/kakao\n\n- 배포: https://nugudi.com/api/auth/callback/kakao",
        "operationId": "getKakaoAuthorizeUrl",
        "parameters": [
          {
            "name": "redirectUri",
            "in": "query",
            "description": "카카오 인증 완료 후 리다이렉트될 URI",
            "required": true,
            "schema": { "type": "string" },
            "example": "https://nugudi.com/api/auth/callback/kakao"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseGetKakaoAuthorizeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/login/google/authorize-url": {
      "get": {
        "tags": ["사용자 인증"],
        "summary": "구글 OAuth 인증 URL 조회",
        "description": "구글 OAuth 인증을 위한 인증 URL을 조회합니다.\n\nOAuth 설정을 서버에서 중앙 관리하여 프론트엔드-백엔드 간 설정 동기화를 보장합니다.\n\n사용 방법:\n1. 프론트엔드의 redirect_uri를 파라미터로 전달하여 이 API 호출\n2. 받은 URL로 사용자를 리다이렉트\n3. 사용자가 구글 로그인 및 동의 완료\n4. 프론트엔드 redirect_uri로 인가 코드(code)가 전달됨\n5. 인가 코드를 /api/v1/auth/login/google 엔드포인트로 전달하여 로그인 완료\n\n참고:\n- redirect_uri는 구글 개발자 콘솔에 등록된 URI여야 합니다\n- 로컬: http://localhost:3000/api/auth/callback/google\n\n- 배포: https://nugudi.com/api/auth/callback/google",
        "operationId": "getGoogleAuthorizeUrl",
        "parameters": [
          {
            "name": "redirectUri",
            "in": "query",
            "description": "구글 인증 완료 후 리다이렉트될 URI",
            "required": true,
            "schema": { "type": "string" },
            "example": "https://nugudi.com/api/auth/callback/google"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseGetGoogleAuthorizeResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SignUpSocialRequest": {
        "required": [
          "deviceInfo",
          "locationInfo",
          "nickname",
          "privacyPolicy",
          "termsOfService"
        ],
        "type": "object",
        "properties": {
          "nickname": {
            "type": "string",
            "description": "닉네임",
            "example": "너구디유저"
          },
          "privacyPolicy": {
            "type": "boolean",
            "description": "개인정보 처리방침 약관 동의 여부"
          },
          "termsOfService": {
            "type": "boolean",
            "description": "이용약관 동의 여부"
          },
          "locationInfo": {
            "type": "boolean",
            "description": "위치정보 수집·이용약관 동의 여부 "
          },
          "marketingEmail": {
            "type": "boolean",
            "description": "마케팅 이메일 수신 동의 여부 (선택적, 기본값: false)"
          },
          "deviceInfo": { "$ref": "#/components/schemas/UserDeviceInfoDTO" }
        }
      },
      "UserDeviceInfoDTO": {
        "required": ["deviceType", "deviceUniqueId"],
        "type": "object",
        "properties": {
          "deviceType": {
            "type": "string",
            "description": "디바이스 타입",
            "example": "ANDROID",
            "enum": ["IOS", "ANDROID", "WEB", "IOS", "ANDROID", "WEB"]
          },
          "deviceUniqueId": {
            "type": "string",
            "description": "디바이스 고유 ID",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          },
          "deviceName": {
            "type": "string",
            "description": "디바이스 이름",
            "example": "iPhone 15 Pro"
          },
          "deviceModel": {
            "type": "string",
            "description": "디바이스 모델",
            "example": "iPhone15,2"
          },
          "osVersion": {
            "type": "string",
            "description": "OS 버전",
            "example": "17.1.1"
          },
          "appVersion": {
            "type": "string",
            "description": "앱 버전",
            "example": "1.0.0"
          },
          "pushToken": {
            "type": "string",
            "description": "푸시 토큰 (알림 동의시에만 필수)",
            "example": "dHJhbnNhY3Rpb25faWQ6MTIzNDU2Nzg5MA=="
          }
        },
        "description": "디바이스 정보 (일반/소셜 공통)"
      },
      "SignUpResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "사용자 ID",
            "format": "int64",
            "example": 123
          },
          "email": {
            "type": "string",
            "description": "사용자 이메일",
            "example": "user@nugudi.com"
          },
          "nickname": {
            "type": "string",
            "description": "사용자 닉네임",
            "example": "너구디유저"
          },
          "accessToken": {
            "type": "string",
            "description": "액세스 토큰",
            "example": "eyJhbGciOiJIUzI1NiJ9..."
          },
          "refreshToken": {
            "type": "string",
            "description": "리프레시 토큰",
            "example": "eyJhbGciOiJIUzI1NiJ9..."
          },
          "accessTokenExpiresAt": {
            "type": "string",
            "description": "액세스 토큰 만료 시간",
            "format": "date-time"
          },
          "refreshTokenExpiresAt": {
            "type": "string",
            "description": "리프레시 토큰 만료 시간",
            "format": "date-time"
          }
        },
        "description": "회원가입 성공 응답 (일반/소셜 공통)"
      },
      "SuccessResponseSignUpResponse": {
        "type": "object",
        "properties": {
          "timestamp": { "type": "string", "format": "date-time" },
          "success": { "type": "boolean" },
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "data": { "$ref": "#/components/schemas/SignUpResponse" }
        }
      },
      "SignUpLocalRequest": {
        "required": [
          "deviceInfo",
          "email",
          "locationInfo",
          "nickname",
          "password",
          "privacyPolicy",
          "termsOfService"
        ],
        "type": "object",
        "properties": {
          "nickname": {
            "type": "string",
            "description": "닉네임",
            "example": "너구디유저"
          },
          "email": {
            "type": "string",
            "description": "이메일",
            "example": "user@nugudi.com"
          },
          "password": {
            "type": "string",
            "description": "비밀번호 (최소 8자 이상, 최대 20자 이하, 영문/숫자/특수문자/대문자 1개 이상 포함)",
            "example": "SecurePass123!"
          },
          "privacyPolicy": {
            "type": "boolean",
            "description": "개인정보 처리방침 약관 동의 여부"
          },
          "termsOfService": {
            "type": "boolean",
            "description": "이용약관 동의 여부"
          },
          "locationInfo": {
            "type": "boolean",
            "description": "위치정보 수집·이용약관 동의 여부 "
          },
          "marketingEmail": {
            "type": "boolean",
            "description": "마케팅 이메일 수신 동의 여부 (선택적, 기본값: false)"
          },
          "deviceInfo": { "$ref": "#/components/schemas/UserDeviceInfoDTO" }
        },
        "description": "일반 회원가입 요청 정보"
      },
      "RefreshTokenResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "새로운 액세스 토큰",
            "example": "eyJhbGciOiJIUzI1NiJ9..."
          },
          "refreshToken": {
            "type": "string",
            "description": "새로운 리프레시 토큰",
            "example": "eyJhbGciOiJIUzI1NiJ9..."
          },
          "accessTokenExpiresAt": {
            "type": "string",
            "description": "액세스 토큰 만료 시간",
            "format": "date-time"
          },
          "refreshTokenExpiresAt": {
            "type": "string",
            "description": "리프레시 토큰 만료 시간",
            "format": "date-time"
          }
        },
        "description": "토큰 갱신 응답"
      },
      "SuccessResponseRefreshTokenResponse": {
        "type": "object",
        "properties": {
          "timestamp": { "type": "string", "format": "date-time" },
          "success": { "type": "boolean" },
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "data": { "$ref": "#/components/schemas/RefreshTokenResponse" }
        }
      },
      "LogoutResponse": {
        "type": "object",
        "properties": {
          "logoutAt": {
            "type": "string",
            "description": "로그아웃 처리 시간",
            "format": "date-time"
          }
        },
        "description": "로그아웃 응답"
      },
      "SuccessResponseLogoutResponse": {
        "type": "object",
        "properties": {
          "timestamp": { "type": "string", "format": "date-time" },
          "success": { "type": "boolean" },
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "data": { "$ref": "#/components/schemas/LogoutResponse" }
        }
      },
      "NaverLoginRequest": {
        "required": ["code", "deviceInfo", "redirectUri"],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "네이버 OAuth 인가 코드 (네이버 로그인 후 발급받은 authorization code)",
            "example": "mMJrjSJksVH3Z8xK8GQ_Vs..."
          },
          "redirectUri": {
            "type": "string",
            "description": "네이버 인증 시 사용한 redirect URI (인가 URL 조회 시 전달한 값과 동일해야 함)",
            "example": "https://nugudi.com/api/auth/callback/naver"
          },
          "state": {
            "type": "string",
            "description": "CSRF 방지를 위한 상태 토큰 (선택적, 인가 URL 조회 시 사용한 값과 동일해야 함)",
            "example": "STATE_STRING"
          },
          "deviceInfo": { "$ref": "#/components/schemas/UserDeviceInfoDTO" }
        },
        "description": "네이버 소셜 로그인 요청"
      },
      "SocialLoginResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "카카오 로그인 상태",
            "example": "EXISTING_USER",
            "enum": ["EXISTING_USER", "NEW_USER"]
          },
          "userId": {
            "type": "integer",
            "description": "사용자 ID (기존 회원인 경우)",
            "format": "int64",
            "example": 1
          },
          "nickname": {
            "type": "string",
            "description": "사용자 닉네임 (기존 회원인 경우)",
            "example": "너구디유저"
          },
          "profileImageUrl": {
            "type": "string",
            "description": "프로필 이미지 URL",
            "example": "https://cdn.nugudi.com/profile/123.jpg"
          },
          "accessToken": {
            "type": "string",
            "description": "액세스 토큰 (기존 회원인 경우)",
            "example": "eyJhbGciOiJIUzI1NiJ9..."
          },
          "refreshToken": {
            "type": "string",
            "description": "리프레시 토큰 (기존 회원인 경우)",
            "example": "eyJhbGciOiJIUzI1NiJ9..."
          },
          "accessTokenExpiresAt": {
            "type": "string",
            "description": "액세스 토큰 만료 시간",
            "format": "date-time"
          },
          "refreshTokenExpiresAt": {
            "type": "string",
            "description": "리프레시 토큰 만료 시간",
            "format": "date-time"
          },
          "registrationToken": {
            "type": "string",
            "description": "등록 토큰 (신규 회원인 경우)",
            "example": "eyJhbGciOiJIUzI1NiJ9..."
          },
          "registrationTokenExpiresAt": {
            "type": "string",
            "description": "등록 토큰 만료 시간 (신규 회원인 경우)",
            "format": "date-time"
          }
        },
        "description": "소셜 로그인 응답"
      },
      "SuccessResponseSocialLoginResponse": {
        "type": "object",
        "properties": {
          "timestamp": { "type": "string", "format": "date-time" },
          "success": { "type": "boolean" },
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "data": { "$ref": "#/components/schemas/SocialLoginResponse" }
        }
      },
      "LocalLoginRequest": {
        "required": ["deviceInfo", "email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "이메일",
            "example": "user@nugudi.com"
          },
          "password": {
            "type": "string",
            "description": "비밀번호",
            "example": "SecurePass123!"
          },
          "deviceInfo": { "$ref": "#/components/schemas/UserDeviceInfoDTO" }
        },
        "description": "일반 로그인 요청"
      },
      "LocalLoginResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "사용자 ID",
            "format": "int64",
            "example": 1
          },
          "email": {
            "type": "string",
            "description": "사용자 이메일",
            "example": "user@nugudi.com"
          },
          "nickname": {
            "type": "string",
            "description": "사용자 닉네임",
            "example": "너구디유저"
          },
          "profileImageUrl": {
            "type": "string",
            "description": "프로필 이미지 URL",
            "example": "https://cdn.nugudi.com/profile/123.jpg"
          },
          "accessToken": {
            "type": "string",
            "description": "액세스 토큰",
            "example": "eyJhbGciOiJIUzI1NiJ9..."
          },
          "refreshToken": {
            "type": "string",
            "description": "리프레시 토큰",
            "example": "eyJhbGciOiJIUzI1NiJ9..."
          },
          "accessTokenExpiresAt": {
            "type": "string",
            "description": "액세스 토큰 만료 시간",
            "format": "date-time"
          },
          "refreshTokenExpiresAt": {
            "type": "string",
            "description": "리프레시 토큰 만료 시간",
            "format": "date-time"
          }
        },
        "description": "일반 로그인 응답"
      },
      "SuccessResponseLocalLoginResponse": {
        "type": "object",
        "properties": {
          "timestamp": { "type": "string", "format": "date-time" },
          "success": { "type": "boolean" },
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "data": { "$ref": "#/components/schemas/LocalLoginResponse" }
        }
      },
      "KakaoLoginRequest": {
        "required": ["code", "deviceInfo", "redirectUri"],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "카카오 OAuth 인가 코드 (카카오 로그인 후 발급받은 authorization code)",
            "example": "mMJrjSJksVH3Z8xK8GQ_Vs..."
          },
          "redirectUri": {
            "type": "string",
            "description": "카카오 인증 시 사용한 redirect URI (인가 URL 조회 시 전달한 값과 동일해야 함)",
            "example": "https://nugudi.com/api/auth/callback/kakao"
          },
          "deviceInfo": { "$ref": "#/components/schemas/UserDeviceInfoDTO" }
        },
        "description": "카카오 소셜 로그인 요청"
      },
      "GoogleLoginRequest": {
        "required": ["code", "deviceInfo", "redirectUri"],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "구글 OAuth 인가 코드 (구글 로그인 후 발급받은 authorization code)",
            "example": "mMJrjSJksVH3Z8xK8GQ_Vs..."
          },
          "redirectUri": {
            "type": "string",
            "description": "구글 인증 시 사용한 redirect URI (인가 URL 조회 시 전달한 값과 동일해야 함)",
            "example": "https://nugudi.com/api/auth/callback/google"
          },
          "deviceInfo": { "$ref": "#/components/schemas/UserDeviceInfoDTO" }
        },
        "description": "구글 소셜 로그인 요청"
      },
      "EmailVerifyRequest": {
        "required": ["code", "email", "purpose"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "이메일",
            "example": "user@nugudi.com"
          },
          "code": {
            "type": "string",
            "description": "인증 코드",
            "example": "123456"
          },
          "purpose": {
            "type": "string",
            "description": "인증 목적 (SIGNUP: 회원가입, PASSWORD_RESET: 비밀번호 재설정)",
            "example": "SIGNUP",
            "enum": ["SIGNUP", "PASSWORD_RESET"]
          }
        },
        "description": "이메일 인증 코드 확인 요청"
      },
      "EmailVerifyResponse": {
        "type": "object",
        "properties": {
          "verified": {
            "type": "boolean",
            "description": "인증 성공 여부",
            "example": true
          }
        },
        "description": "이메일 인증 코드 확인 응답"
      },
      "SuccessResponseEmailVerifyResponse": {
        "type": "object",
        "properties": {
          "timestamp": { "type": "string", "format": "date-time" },
          "success": { "type": "boolean" },
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "data": { "$ref": "#/components/schemas/EmailVerifyResponse" }
        }
      },
      "EmailVerificationRequest": {
        "required": ["email", "purpose"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "이메일",
            "example": "user@nugudi.com"
          },
          "purpose": {
            "type": "string",
            "description": "인증 목적 (SIGNUP: 회원가입, PASSWORD_RESET: 비밀번호 재설정)",
            "example": "SIGNUP",
            "enum": ["SIGNUP", "PASSWORD_RESET"]
          }
        },
        "description": "이메일 인증 코드 발송 요청"
      },
      "EmailVerificationResponse": {
        "type": "object",
        "properties": {
          "expiresInSeconds": {
            "type": "integer",
            "description": "만료 시간(초)",
            "format": "int64",
            "example": 300
          }
        },
        "description": "이메일 인증 코드 발송 응답"
      },
      "SuccessResponseEmailVerificationResponse": {
        "type": "object",
        "properties": {
          "timestamp": { "type": "string", "format": "date-time" },
          "success": { "type": "boolean" },
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "data": { "$ref": "#/components/schemas/EmailVerificationResponse" }
        }
      },
      "BusinessHoursRequest": {
        "required": ["operatingDays"],
        "type": "object",
        "properties": {
          "lunchStartTime": { "$ref": "#/components/schemas/LocalTime" },
          "lunchEndTime": { "$ref": "#/components/schemas/LocalTime" },
          "dinnerStartTime": { "$ref": "#/components/schemas/LocalTime" },
          "dinnerEndTime": { "$ref": "#/components/schemas/LocalTime" },
          "operatingDays": {
            "type": "array",
            "description": "영업 요일 (예: 평일만 영업하는 경우)",
            "example": ["MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY"],
            "items": {
              "type": "string",
              "description": "영업 요일 (예: 평일만 영업하는 경우)",
              "example": "[\"MONDAY\",\"TUESDAY\",\"WEDNESDAY\",\"THURSDAY\",\"FRIDAY\"]",
              "enum": [
                "MONDAY",
                "TUESDAY",
                "WEDNESDAY",
                "THURSDAY",
                "FRIDAY",
                "SATURDAY",
                "SUNDAY"
              ]
            }
          },
          "specialHolidays": {
            "type": "array",
            "description": "특별 휴무일 (공휴일 등)",
            "example": ["2025-01-01", "2025-03-01", "2025-05-05"],
            "items": {
              "type": "string",
              "description": "특별 휴무일 (공휴일 등)",
              "format": "date"
            }
          },
          "note": {
            "type": "string",
            "description": "영업시간 비고",
            "example": "공휴일 휴무"
          }
        },
        "description": "구내식당 영업시간 정보"
      },
      "LocalTime": {
        "type": "object",
        "properties": {
          "hour": { "type": "integer", "format": "int32" },
          "minute": { "type": "integer", "format": "int32" },
          "second": { "type": "integer", "format": "int32" },
          "nano": { "type": "integer", "format": "int32" }
        },
        "description": "저녁 종료 시간",
        "example": "19:30:00"
      },
      "RegisterCafeteriaRequest": {
        "required": ["address", "addressDetail", "name", "takeoutAvailable"],
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "address": { "type": "string" },
          "addressDetail": { "type": "string" },
          "latitude": { "type": "number" },
          "longitude": { "type": "number" },
          "phone": { "type": "string" },
          "description": { "type": "string" },
          "oneLineIntro": { "type": "string" },
          "mealTicketPrice": { "type": "integer", "format": "int32" },
          "mainImageFileId": { "type": "integer", "format": "int64" },
          "businessHours": {
            "$ref": "#/components/schemas/BusinessHoursRequest"
          },
          "takeoutAvailable": { "type": "boolean" }
        }
      },
      "RegisterCafeteriaResponse": {
        "type": "object",
        "properties": {
          "cafeteriaId": { "type": "integer", "format": "int64" },
          "name": { "type": "string" },
          "address": { "type": "string" },
          "addressDetail": { "type": "string" },
          "latitude": { "type": "number" },
          "longitude": { "type": "number" },
          "phone": { "type": "string" },
          "description": { "type": "string" },
          "oneLineIntro": { "type": "string" },
          "mealTicketPrice": { "type": "integer", "format": "int32" },
          "mainImageFileId": { "type": "integer", "format": "int64" },
          "takeoutAvailable": { "type": "boolean" },
          "createdAt": { "type": "string", "format": "date-time" }
        }
      },
      "SuccessResponseRegisterCafeteriaResponse": {
        "type": "object",
        "properties": {
          "timestamp": { "type": "string", "format": "date-time" },
          "success": { "type": "boolean" },
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "data": { "$ref": "#/components/schemas/RegisterCafeteriaResponse" }
        }
      },
      "MenuItemDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "category": {
            "type": "string",
            "enum": [
              "RICE",
              "SOUP",
              "MAIN_DISH",
              "SIDE_DISH",
              "KIMCHI",
              "SALAD",
              "DESSERT",
              "DRINK",
              "SPECIAL"
            ]
          },
          "calories": { "type": "integer", "format": "int32" },
          "caloriesSource": { "type": "string" },
          "displayOrder": { "type": "integer", "format": "int32" }
        },
        "description": "메뉴 항목 목록"
      },
      "RegisterCafeteriaMenuRequest": {
        "required": ["mealType", "menuDate", "menuItems", "restaurantId"],
        "type": "object",
        "properties": {
          "restaurantId": {
            "type": "integer",
            "description": "구내식당 ID",
            "format": "int64",
            "example": 1
          },
          "menuDate": {
            "type": "string",
            "description": "식단 날짜",
            "format": "date",
            "example": "2024-01-15"
          },
          "mealType": {
            "type": "string",
            "description": "식사 시간대 (BREAKFAST, LUNCH, DINNER)",
            "example": "LUNCH",
            "enum": ["BREAKFAST", "LUNCH", "DINNER"]
          },
          "menuItems": {
            "type": "array",
            "description": "메뉴 항목 목록",
            "items": { "$ref": "#/components/schemas/MenuItemDto" }
          },
          "menuImageFileId": {
            "type": "integer",
            "description": "메뉴 이미지 파일 ID",
            "format": "int64",
            "example": 123
          },
          "specialNote": {
            "type": "string",
            "description": "특이사항 (예: 알레르기 정보, 추가 안내사항)",
            "example": "견과류 포함"
          }
        },
        "description": "구내식당 식단표 등록 요청"
      },
      "RegisterCafeteriaMenuResponse": {
        "type": "object",
        "properties": {
          "menuId": {
            "type": "integer",
            "description": "식단표 ID",
            "format": "int64",
            "example": 1
          },
          "restaurantId": {
            "type": "integer",
            "description": "구내식당 ID",
            "format": "int64",
            "example": 1
          },
          "menuDate": {
            "type": "string",
            "description": "식단 날짜",
            "format": "date",
            "example": "2024-01-15"
          },
          "mealType": {
            "type": "string",
            "description": "식사 시간대",
            "example": "LUNCH",
            "enum": ["BREAKFAST", "LUNCH", "DINNER"]
          },
          "menuItems": {
            "type": "array",
            "description": "메뉴 항목 목록",
            "items": { "$ref": "#/components/schemas/MenuItemDto" }
          },
          "totalCalories": {
            "type": "integer",
            "description": "총 칼로리",
            "format": "int32",
            "example": 850
          },
          "menuImageFileId": {
            "type": "integer",
            "description": "메뉴 이미지 파일 ID",
            "format": "int64",
            "example": 123
          },
          "specialNote": {
            "type": "string",
            "description": "특이사항",
            "example": "견과류 포함"
          },
          "createdAt": {
            "type": "string",
            "description": "등록 일시",
            "format": "date-time"
          }
        },
        "description": "구내식당 식단표 등록 응답"
      },
      "SuccessResponseRegisterCafeteriaMenuResponse": {
        "type": "object",
        "properties": {
          "timestamp": { "type": "string", "format": "date-time" },
          "success": { "type": "boolean" },
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "data": {
            "$ref": "#/components/schemas/RegisterCafeteriaMenuResponse"
          }
        }
      },
      "NicknameCheckResponse": {
        "type": "object",
        "properties": {
          "nickname": {
            "type": "string",
            "description": "확인한 닉네임",
            "example": "너구디유저"
          },
          "available": {
            "type": "boolean",
            "description": "사용 가능한지 여부",
            "example": true
          }
        },
        "description": "닉네임 사용 가능 여부 확인 응답"
      },
      "SuccessResponseNicknameCheckResponse": {
        "type": "object",
        "properties": {
          "timestamp": { "type": "string", "format": "date-time" },
          "success": { "type": "boolean" },
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "data": { "$ref": "#/components/schemas/NicknameCheckResponse" }
        }
      },
      "GetMyProfileResponse": {
        "type": "object",
        "properties": {
          "profile": { "$ref": "#/components/schemas/UserProfileDTO" },
          "account": { "$ref": "#/components/schemas/UserAccountDTO" },
          "health": { "$ref": "#/components/schemas/HealthInfoDTO" }
        }
      },
      "HealthInfoDTO": {
        "type": "object",
        "properties": {
          "height": { "type": "integer", "format": "int32" },
          "weight": { "type": "number" }
        }
      },
      "SuccessResponseGetMyProfileResponse": {
        "type": "object",
        "properties": {
          "timestamp": { "type": "string", "format": "date-time" },
          "success": { "type": "boolean" },
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "data": { "$ref": "#/components/schemas/GetMyProfileResponse" }
        }
      },
      "UserAccountDTO": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": ["LOCAL", "GOOGLE", "APPLE", "KAKAO", "NAVER"]
          },
          "email": { "type": "string" }
        }
      },
      "UserProfileDTO": {
        "type": "object",
        "properties": {
          "userId": { "type": "integer", "format": "int64" },
          "nickname": { "type": "string" },
          "profileImageUrl": { "type": "string" },
          "joinDate": { "type": "string", "format": "date" }
        }
      },
      "BusinessHoursDTO": {
        "type": "object",
        "properties": {
          "lunch": { "$ref": "#/components/schemas/TimeRangeDTO" },
          "dinner": { "$ref": "#/components/schemas/TimeRangeDTO" },
          "note": { "type": "string" }
        }
      },
      "CafeteriaInfoDTO": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "name": { "type": "string" },
          "address": { "type": "string" },
          "addressDetail": { "type": "string" },
          "latitude": { "type": "number" },
          "longitude": { "type": "number" },
          "phone": { "type": "string" },
          "mealTicketPrice": { "type": "integer", "format": "int32" },
          "takeoutAvailable": { "type": "boolean" },
          "businessHours": { "$ref": "#/components/schemas/BusinessHoursDTO" }
        }
      },
      "GetCafeteriaWithMenuResponse": {
        "type": "object",
        "properties": {
          "cafeteria": { "$ref": "#/components/schemas/CafeteriaInfoDTO" },
          "menus": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/MenuInfoDTO" }
          }
        }
      },
      "MenuInfoDTO": {
        "type": "object",
        "properties": {
          "mealType": { "type": "string" },
          "menuItems": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/MenuItemDto" }
          },
          "specialNote": { "type": "string" },
          "nutritionInfo": { "$ref": "#/components/schemas/NutritionInfoDTO" }
        }
      },
      "NutritionInfoDTO": {
        "type": "object",
        "properties": {
          "totalCalories": { "type": "integer", "format": "int32" },
          "dailyPercentage": { "type": "integer", "format": "int32" },
          "walkingSteps": { "type": "integer", "format": "int32" },
          "runningKm": { "type": "integer", "format": "int32" },
          "cyclingKm": { "type": "integer", "format": "int32" },
          "stairsFloors": { "type": "integer", "format": "int32" }
        }
      },
      "PageInfo": {
        "type": "object",
        "properties": {
          "nextCursor": { "type": "integer", "format": "int64" },
          "size": { "type": "integer", "format": "int32" },
          "hasNext": { "type": "boolean" }
        }
      },
      "PageResponseGetCafeteriaWithMenuResponse": {
        "type": "object",
        "properties": {
          "timestamp": { "type": "string", "format": "date-time" },
          "success": { "type": "boolean" },
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetCafeteriaWithMenuResponse"
            }
          },
          "pageInfo": { "$ref": "#/components/schemas/PageInfo" }
        }
      },
      "TimeRangeDTO": {
        "type": "object",
        "properties": {
          "start": { "$ref": "#/components/schemas/LocalTime" },
          "end": { "$ref": "#/components/schemas/LocalTime" }
        }
      },
      "GetCafeteriaResponse": {
        "type": "object",
        "properties": {
          "cafeteria": { "$ref": "#/components/schemas/CafeteriaInfoDTO" }
        }
      },
      "SuccessResponseGetCafeteriaResponse": {
        "type": "object",
        "properties": {
          "timestamp": { "type": "string", "format": "date-time" },
          "success": { "type": "boolean" },
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "data": { "$ref": "#/components/schemas/GetCafeteriaResponse" }
        }
      },
      "GetCafeteriaMenuResponse": {
        "type": "object",
        "properties": {
          "menuDate": { "type": "string", "format": "date" },
          "menus": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/MenuInfoDTO" }
          }
        }
      },
      "SuccessResponseGetCafeteriaMenuResponse": {
        "type": "object",
        "properties": {
          "timestamp": { "type": "string", "format": "date-time" },
          "success": { "type": "boolean" },
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "data": { "$ref": "#/components/schemas/GetCafeteriaMenuResponse" }
        }
      },
      "GetCafeteriaMenuAvailabilityResponse": {
        "type": "object",
        "properties": {
          "year": { "type": "integer", "format": "int32" },
          "month": { "type": "integer", "format": "int32" },
          "daysWithMenu": {
            "type": "array",
            "items": { "type": "integer", "format": "int32" }
          }
        }
      },
      "SuccessResponseGetCafeteriaMenuAvailabilityResponse": {
        "type": "object",
        "properties": {
          "timestamp": { "type": "string", "format": "date-time" },
          "success": { "type": "boolean" },
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "data": {
            "$ref": "#/components/schemas/GetCafeteriaMenuAvailabilityResponse"
          }
        }
      },
      "GetNaverAuthorizeResponse": {
        "type": "object",
        "properties": { "authorizeUrl": { "type": "string" } }
      },
      "SuccessResponseGetNaverAuthorizeResponse": {
        "type": "object",
        "properties": {
          "timestamp": { "type": "string", "format": "date-time" },
          "success": { "type": "boolean" },
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "data": { "$ref": "#/components/schemas/GetNaverAuthorizeResponse" }
        }
      },
      "GetKakaoAuthorizeResponse": {
        "type": "object",
        "properties": { "authorizeUrl": { "type": "string" } }
      },
      "SuccessResponseGetKakaoAuthorizeResponse": {
        "type": "object",
        "properties": {
          "timestamp": { "type": "string", "format": "date-time" },
          "success": { "type": "boolean" },
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "data": { "$ref": "#/components/schemas/GetKakaoAuthorizeResponse" }
        }
      },
      "GetGoogleAuthorizeResponse": {
        "type": "object",
        "properties": { "authorizeUrl": { "type": "string" } }
      },
      "SuccessResponseGetGoogleAuthorizeResponse": {
        "type": "object",
        "properties": {
          "timestamp": { "type": "string", "format": "date-time" },
          "success": { "type": "boolean" },
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "data": { "$ref": "#/components/schemas/GetGoogleAuthorizeResponse" }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "description": "JWT Bearer 토큰을 입력하세요. (Bearer 접두사는 자동으로 추가됩니다)",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
