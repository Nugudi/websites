/**
 * Generated by orval v7.10.0 🍺
 * Do not edit manually.
 * 너구디 API
 * 구내식당 플랫폼 API
 * OpenAPI spec version: v1
 */
/**
 * 디바이스 타입
 */
export type DeviceInfoDtoDeviceType =
  | "IOS"
  | "ANDROID"
  | "WEB"
  | "IOS"
  | "ANDROID"
  | "WEB";
/**
 * 디바이스 정보 (일반/소셜 공통)
 */
export interface DeviceInfoDto {
  /** 디바이스 타입 */
  deviceType: DeviceInfoDtoDeviceType;
  /** 디바이스 고유 ID */
  deviceUniqueId: string;
  /** 디바이스 이름 */
  deviceName?: string;
  /** 디바이스 모델 */
  deviceModel?: string;
  /** OS 버전 */
  osVersion?: string;
  /** 앱 버전 */
  appVersion?: string;
  /** 푸시 토큰 (알림 동의시에만 필수) */
  pushToken?: string;
}

/**
 * 일반 회원가입 요청 정보
 */
export interface SignUpLocalRequest {
  /** 닉네임 */
  nickname: string;
  /** 이메일 */
  email: string;
  /** 비밀번호 (최소 8자 이상, 최대 20자 이하, 영문/숫자/특수문자/대문자 1개 이상 포함) */
  password: string;
  /** 개인정보 처리방침 약관 동의 여부 */
  privacyPolicy: boolean;
  /** 이용약관 동의 여부 */
  termsOfService: boolean;
  /** 위치정보 수집·이용약관 동의 여부  */
  locationInfo: boolean;
  /** 마케팅 이메일 수신 동의 여부 (선택적, 기본값: false) */
  marketingEmail?: boolean;
  deviceInfo: DeviceInfoDto;
}

/**
 * 회원가입 성공 응답 (일반/소셜 공통)
 */
export interface SignUpResponse {
  /** 사용자 ID */
  userId?: number;
  /** 사용자 이메일 */
  email?: string;
  /** 사용자 닉네임 */
  nickname?: string;
  /** 액세스 토큰 */
  accessToken?: string;
  /** 리프레시 토큰 */
  refreshToken?: string;
  /** 액세스 토큰 만료 시간 */
  accessTokenExpiresAt?: Date;
  /** 리프레시 토큰 만료 시간 */
  refreshTokenExpiresAt?: Date;
}

export interface SuccessResponseSignUpResponse {
  timestamp?: Date;
  success?: boolean;
  message?: string;
  data?: SignUpResponse;
}

/**
 * 토큰 갱신 응답
 */
export interface RefreshTokenResponse {
  /** 새로운 액세스 토큰 */
  accessToken?: string;
  /** 새로운 리프레시 토큰 */
  refreshToken?: string;
  /** 액세스 토큰 만료 시간 */
  accessTokenExpiresAt?: Date;
  /** 리프레시 토큰 만료 시간 */
  refreshTokenExpiresAt?: Date;
}

export interface SuccessResponseRefreshTokenResponse {
  timestamp?: Date;
  success?: boolean;
  message?: string;
  data?: RefreshTokenResponse;
}

/**
 * 일반 로그인 요청
 */
export interface LocalLoginRequest {
  /** 이메일 */
  email: string;
  /** 비밀번호 */
  password: string;
  deviceInfo: DeviceInfoDto;
}

/**
 * 일반 로그인 응답
 */
export interface LocalLoginResponse {
  /** 사용자 ID */
  userId?: number;
  /** 사용자 이메일 */
  email?: string;
  /** 사용자 닉네임 */
  nickname?: string;
  /** 프로필 이미지 URL */
  profileImageUrl?: string;
  /** 액세스 토큰 */
  accessToken?: string;
  /** 리프레시 토큰 */
  refreshToken?: string;
  /** 액세스 토큰 만료 시간 */
  accessTokenExpiresAt?: Date;
  /** 리프레시 토큰 만료 시간 */
  refreshTokenExpiresAt?: Date;
}

export interface SuccessResponseLocalLoginResponse {
  timestamp?: Date;
  success?: boolean;
  message?: string;
  data?: LocalLoginResponse;
}

/**
 * 인증 목적 (SIGNUP: 회원가입, PASSWORD_RESET: 비밀번호 재설정)
 */
export type EmailVerifyRequestPurpose = "SIGNUP" | "PASSWORD_RESET";
/**
 * 이메일 인증 코드 확인 요청
 */
export interface EmailVerifyRequest {
  /** 이메일 */
  email: string;
  /** 인증 코드 */
  code: string;
  /** 인증 목적 (SIGNUP: 회원가입, PASSWORD_RESET: 비밀번호 재설정) */
  purpose: EmailVerifyRequestPurpose;
}

/**
 * 이메일 인증 코드 확인 응답
 */
export interface EmailVerifyResponse {
  /** 인증 성공 여부 */
  verified?: boolean;
}

export interface SuccessResponseEmailVerifyResponse {
  timestamp?: Date;
  success?: boolean;
  message?: string;
  data?: EmailVerifyResponse;
}

/**
 * 인증 목적 (SIGNUP: 회원가입, PASSWORD_RESET: 비밀번호 재설정)
 */
export type EmailVerificationRequestPurpose = "SIGNUP" | "PASSWORD_RESET";
/**
 * 이메일 인증 코드 발송 요청
 */
export interface EmailVerificationRequest {
  /** 이메일 */
  email: string;
  /** 인증 목적 (SIGNUP: 회원가입, PASSWORD_RESET: 비밀번호 재설정) */
  purpose: EmailVerificationRequestPurpose;
}

/**
 * 이메일 인증 코드 발송 응답
 */
export interface EmailVerificationResponse {
  /** 만료 시간(초) */
  expiresInSeconds?: number;
}

export interface SuccessResponseEmailVerificationResponse {
  timestamp?: Date;
  success?: boolean;
  message?: string;
  data?: EmailVerificationResponse;
}

/**
 * 닉네임 사용 가능 여부 확인 응답
 */
export interface NicknameCheckResponse {
  /** 확인한 닉네임 */
  nickname?: string;
  /** 사용 가능한지 여부 */
  available?: boolean;
}

export interface SuccessResponseNicknameCheckResponse {
  timestamp?: Date;
  success?: boolean;
  message?: string;
  data?: NicknameCheckResponse;
}

export type SendEmailVerificationCode200 = {
  message?: string;
};
